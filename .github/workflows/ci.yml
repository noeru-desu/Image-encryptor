name: CI

on: [ push, pull_request ]

jobs:
  Build-by-Pyinstaller:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: amd64-win64-pyinstaller, os: windows-latest, A: x64 }
          - { name: i386-win32-pyinstaller,  os: windows-latest, A: x86 }
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download UPX
      uses: i3h/download-release-asset@v1.3.2
      with:
        owner: upx
        repo: upx
        tag: latest
        file: /upx-[0-9.]+-win64.zip/
        path: ./
    - name: Unzip UPX
      run: |
        Expand-Archive -Path ./upx-*.zip -DestinationPath ./
        Move-Item ./upx-*/upx.exe ./
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        pip install pyinstaller pillow colorlog pycryptodome numpy progressbar2
    - name: Build artifacts
      run: |
        New-Item -Name pyinstaller -type directory
        New-Item -Name pyinstaller/onefile -type directory
        New-Item -Name pyinstaller/multiplefiles -type directory
        python -OO -m PyInstaller --distpath pyinstaller/multiplefiles Image_encryptor[CLI].py
        python -OO -m PyInstaller --distpath pyinstaller/onefile -F Image_encryptor[CLI].py
        pip install wxPython
        python -OO -m PyInstaller --distpath pyinstaller/multiplefiles Image_encryptor[GUI].py
        python -OO -m PyInstaller --distpath pyinstaller/onefile -F Image_encryptor[GUI].py
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.name }}
        path: |
          pyinstaller/onefile
          pyinstaller/multiplefiles
  Build-by-Nuitka:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: amd64-win64-msvc-14.2, os: windows-latest, C: msvc-14.2-x64, A: x64 }
          - { name: i386-win32-msvc-14.2,  os: windows-latest, C: msvc-14.2-x86, A: x86 }
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: 'Set up Developer Command Prompt'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.A }}
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        pip install pillow colorlog pycryptodome numpy progressbar2
        pip install -U "https://github.com/Nuitka/Nuitka/archive/develop.zip"
    - name: Build artifacts
      run: |
        nuitka --msvc=14.2 --standalone --assume-yes-for-downloads --output-dir=build Image_encryptor[CLI].py
        nuitka --msvc=14.2 --onefile --assume-yes-for-downloads --output-dir=build Image_encryptor[CLI].py
        pip install wxPython
        nuitka --msvc=14.2 --standalone --assume-yes-for-downloads --output-dir=build Image_encryptor[GUI].py
        nuitka --msvc=14.2 --onefile --assume-yes-for-downloads --output-dir=build Image_encryptor[GUI].py
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.name }}
        path: build
