name: CI

on: [ push, pull_request ]

jobs:
  Build-by-Pyinstaller:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pyinstaller
    - name: Build artifacts
      run: |
        pyinstaller -F Image_encryptor.py
        pyinstaller -F Image_decryptor.py
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: by-pyinstaller
        path: dist
  Build-by-Nuitka:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up MinGW
      uses: egor-tensin/setup-mingw@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -U "https://github.com/Nuitka/Nuitka/archive/develop.zip"
        pip install markupsafe
    - name: Build artifacts
      run: |
        New-Item C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\lib\bfd-plugins -type Directory
        Move-Item -path C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\libexec\gcc\x86_64-w64-mingw32\8.1.0\liblto_plugin-0.dll -destination C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\lib\bfd-plugins\
        nuitka --msvc=MSVC --lto yes --onefile --assume-yes-for-downloads --output-dir=build Image_encryptor.py
        nuitka --msvc=MSVC --lto yes --onefile --assume-yes-for-downloads --output-dir=build Image_decryptor.py
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: by-nuitka
        path: |
          build/Image_encryptor.exe
          build/Image_decryptor.exe
